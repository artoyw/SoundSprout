{"ast":null,"code":"var _jsxFileName = \"/home/juanjgarcia05/soundsprout/frontend/src/components/PerformanceScore.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PerformanceScore = ({\n  score,\n  notes\n}) => {\n  if (!score) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"performance-score\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Performance Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-card overall\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Overall Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-value\",\n          children: [Math.round(score.overallScore), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-card pitch\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Pitch Accuracy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-value\",\n          children: [Math.round(score.pitchScore), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-card rhythm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Rhythm Accuracy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-value\",\n          children: [Math.round(score.rhythmScore), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Performance Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-content\",\n        children: generateFeedback(score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .performance-score {\n          padding: 20px;\n          background: white;\n          border-radius: 8px;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n          margin: 20px 0;\n        }\n\n        .score-grid {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n          gap: 20px;\n          margin: 20px 0;\n        }\n\n        .score-card {\n          padding: 20px;\n          border-radius: 8px;\n          text-align: center;\n          background: #f8f9fa;\n        }\n\n        .score-card.overall {\n          background: #E3F2FD;\n          grid-column: 1 / -1;\n        }\n\n        .score-card.pitch {\n          background: #E8F5E9;\n        }\n\n        .score-card.rhythm {\n          background: #FFF3E0;\n        }\n\n        .score-value {\n          font-size: 48px;\n          font-weight: bold;\n          margin: 10px 0;\n        }\n\n        .feedback-section {\n          margin-top: 30px;\n          padding-top: 20px;\n          border-top: 1px solid #eee;\n        }\n\n        .feedback-content {\n          margin-top: 15px;\n          line-height: 1.6;\n        }\n\n        h2 {\n          margin: 0 0 20px 0;\n          color: #333;\n        }\n\n        h3 {\n          margin: 0;\n          color: #666;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n// Generate feedback based on scores\n_c = PerformanceScore;\nfunction generateFeedback(score) {\n  const feedback = [];\n\n  // Overall score feedback\n  if (score.overallScore >= 90) {\n    feedback.push(\"Excellent performance! You've mastered this piece!\");\n  } else if (score.overallScore >= 80) {\n    feedback.push(\"Great job! Your performance shows strong understanding of the piece.\");\n  } else if (score.overallScore >= 70) {\n    feedback.push(\"Good effort! Keep practicing to improve your performance.\");\n  } else {\n    feedback.push(\"Keep practicing! Focus on the areas that need improvement.\");\n  }\n\n  // Pitch accuracy feedback\n  if (score.pitchScore < 80) {\n    feedback.push(\"Work on your pitch accuracy. Try practicing with a tuner to improve intonation.\");\n  }\n\n  // Rhythm accuracy feedback\n  if (score.rhythmScore < 80) {\n    feedback.push(\"Focus on your timing. Practice with a metronome to improve rhythm accuracy.\");\n  }\n  return feedback.map((text, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: text\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this));\n}\nexport default PerformanceScore;\nvar _c;\n$RefreshReg$(_c, \"PerformanceScore\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PerformanceScore","score","notes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","overallScore","pitchScore","rhythmScore","generateFeedback","jsx","_c","feedback","push","map","text","index","$RefreshReg$"],"sources":["/home/juanjgarcia05/soundsprout/frontend/src/components/PerformanceScore.js"],"sourcesContent":["import React from 'react';\n\nconst PerformanceScore = ({ score, notes }) => {\n  if (!score) return null;\n\n  return (\n    <div className=\"performance-score\">\n      <h2>Performance Results</h2>\n      \n      <div className=\"score-grid\">\n        <div className=\"score-card overall\">\n          <h3>Overall Score</h3>\n          <div className=\"score-value\">{Math.round(score.overallScore)}%</div>\n        </div>\n        \n        <div className=\"score-card pitch\">\n          <h3>Pitch Accuracy</h3>\n          <div className=\"score-value\">{Math.round(score.pitchScore)}%</div>\n        </div>\n        \n        <div className=\"score-card rhythm\">\n          <h3>Rhythm Accuracy</h3>\n          <div className=\"score-value\">{Math.round(score.rhythmScore)}%</div>\n        </div>\n      </div>\n\n      <div className=\"feedback-section\">\n        <h3>Performance Feedback</h3>\n        <div className=\"feedback-content\">\n          {generateFeedback(score)}\n        </div>\n      </div>\n\n      <style jsx>{`\n        .performance-score {\n          padding: 20px;\n          background: white;\n          border-radius: 8px;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n          margin: 20px 0;\n        }\n\n        .score-grid {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n          gap: 20px;\n          margin: 20px 0;\n        }\n\n        .score-card {\n          padding: 20px;\n          border-radius: 8px;\n          text-align: center;\n          background: #f8f9fa;\n        }\n\n        .score-card.overall {\n          background: #E3F2FD;\n          grid-column: 1 / -1;\n        }\n\n        .score-card.pitch {\n          background: #E8F5E9;\n        }\n\n        .score-card.rhythm {\n          background: #FFF3E0;\n        }\n\n        .score-value {\n          font-size: 48px;\n          font-weight: bold;\n          margin: 10px 0;\n        }\n\n        .feedback-section {\n          margin-top: 30px;\n          padding-top: 20px;\n          border-top: 1px solid #eee;\n        }\n\n        .feedback-content {\n          margin-top: 15px;\n          line-height: 1.6;\n        }\n\n        h2 {\n          margin: 0 0 20px 0;\n          color: #333;\n        }\n\n        h3 {\n          margin: 0;\n          color: #666;\n        }\n      `}</style>\n    </div>\n  );\n};\n\n// Generate feedback based on scores\nfunction generateFeedback(score) {\n  const feedback = [];\n\n  // Overall score feedback\n  if (score.overallScore >= 90) {\n    feedback.push(\"Excellent performance! You've mastered this piece!\");\n  } else if (score.overallScore >= 80) {\n    feedback.push(\"Great job! Your performance shows strong understanding of the piece.\");\n  } else if (score.overallScore >= 70) {\n    feedback.push(\"Good effort! Keep practicing to improve your performance.\");\n  } else {\n    feedback.push(\"Keep practicing! Focus on the areas that need improvement.\");\n  }\n\n  // Pitch accuracy feedback\n  if (score.pitchScore < 80) {\n    feedback.push(\"Work on your pitch accuracy. Try practicing with a tuner to improve intonation.\");\n  }\n\n  // Rhythm accuracy feedback\n  if (score.rhythmScore < 80) {\n    feedback.push(\"Focus on your timing. Practice with a metronome to improve rhythm accuracy.\");\n  }\n\n  return feedback.map((text, index) => (\n    <p key={index}>{text}</p>\n  ));\n}\n\nexport default PerformanceScore; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}