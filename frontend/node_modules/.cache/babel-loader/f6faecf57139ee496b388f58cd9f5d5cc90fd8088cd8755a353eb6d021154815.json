{"ast":null,"code":"var _jsxFileName = \"/home/juanjgarcia05/soundsprout/frontend/src/components/AudioCapture.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioCapture = ({\n  songId,\n  onNoteDetected,\n  onSessionEnd\n}) => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [error, setError] = useState(null);\n  const audioContext = useRef(null);\n  const mediaStream = useRef(null);\n  const analyser = useRef(null);\n  const socket = useRef(null);\n  const animationFrame = useRef(null);\n  useEffect(() => {\n    // Initialize WebSocket connection\n    socket.current = io(process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000');\n\n    // Set up socket event listeners\n    socket.current.on('noteDetected', data => {\n      if (data.note) {\n        onNoteDetected(data);\n      }\n    });\n    socket.current.on('sessionEnded', data => {\n      onSessionEnd(data);\n    });\n    return () => {\n      if (socket.current) {\n        socket.current.disconnect();\n      }\n      if (animationFrame.current) {\n        cancelAnimationFrame(animationFrame.current);\n      }\n      stopRecording();\n    };\n  }, [songId, onNoteDetected, onSessionEnd]);\n  const startRecording = async () => {\n    try {\n      // Request microphone access\n      mediaStream.current = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n\n      // Set up audio context and analyser\n      audioContext.current = new (window.AudioContext || window.webkitAudioContext)();\n      analyser.current = audioContext.current.createAnalyser();\n      analyser.current.fftSize = 2048;\n      const source = audioContext.current.createMediaStreamSource(mediaStream.current);\n      source.connect(analyser.current);\n\n      // Start the session on the server\n      socket.current.emit('startPractice', songId);\n\n      // Start processing audio data\n      processAudioData();\n      setIsRecording(true);\n    } catch (err) {\n      setError('Error accessing microphone: ' + err.message);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaStream.current) {\n      mediaStream.current.getTracks().forEach(track => track.stop());\n      mediaStream.current = null;\n    }\n    if (audioContext.current) {\n      audioContext.current.close();\n      audioContext.current = null;\n    }\n    if (animationFrame.current) {\n      cancelAnimationFrame(animationFrame.current);\n    }\n    setIsRecording(false);\n\n    // End the session on the server\n    if (socket.current) {\n      socket.current.emit('endPractice');\n    }\n  };\n  const processAudioData = () => {\n    if (!analyser.current) return;\n    const dataArray = new Float32Array(analyser.current.frequencyBinCount);\n    analyser.current.getFloatTimeDomainData(dataArray);\n\n    // Send audio data to server\n    socket.current.emit('audioData', Array.from(dataArray));\n\n    // Request next frame\n    animationFrame.current = requestAnimationFrame(processAudioData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-capture\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: isRecording ? stopRecording : startRecording,\n        className: `record-button ${isRecording ? 'recording' : ''}`,\n        children: isRecording ? 'Stop Recording' : 'Start Recording'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .audio-capture {\n          padding: 20px;\n          text-align: center;\n        }\n        \n        .controls {\n          margin-bottom: 20px;\n        }\n        \n        .record-button {\n          padding: 10px 20px;\n          font-size: 16px;\n          border-radius: 25px;\n          border: none;\n          background-color: #4CAF50;\n          color: white;\n          cursor: pointer;\n          transition: all 0.3s ease;\n        }\n        \n        .record-button.recording {\n          background-color: #f44336;\n          animation: pulse 1.5s infinite;\n        }\n        \n        .error-message {\n          color: #f44336;\n          margin-top: 10px;\n        }\n        \n        @keyframes pulse {\n          0% {\n            transform: scale(1);\n          }\n          50% {\n            transform: scale(1.05);\n          }\n          100% {\n            transform: scale(1);\n          }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioCapture, \"s8coTMSyjKzd4fUaQq+uGPLXcZY=\");\n_c = AudioCapture;\nexport default AudioCapture;\nvar _c;\n$RefreshReg$(_c, \"AudioCapture\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","AudioCapture","songId","onNoteDetected","onSessionEnd","_s","isRecording","setIsRecording","error","setError","audioContext","mediaStream","analyser","socket","animationFrame","current","process","env","REACT_APP_BACKEND_URL","on","data","note","disconnect","cancelAnimationFrame","stopRecording","startRecording","navigator","mediaDevices","getUserMedia","audio","window","AudioContext","webkitAudioContext","createAnalyser","fftSize","source","createMediaStreamSource","connect","emit","processAudioData","err","message","getTracks","forEach","track","stop","close","dataArray","Float32Array","frequencyBinCount","getFloatTimeDomainData","Array","from","requestAnimationFrame","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","jsx","_c","$RefreshReg$"],"sources":["/home/juanjgarcia05/soundsprout/frontend/src/components/AudioCapture.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\n\nconst AudioCapture = ({ songId, onNoteDetected, onSessionEnd }) => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [error, setError] = useState(null);\n  const audioContext = useRef(null);\n  const mediaStream = useRef(null);\n  const analyser = useRef(null);\n  const socket = useRef(null);\n  const animationFrame = useRef(null);\n\n  useEffect(() => {\n    // Initialize WebSocket connection\n    socket.current = io(process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000');\n    \n    // Set up socket event listeners\n    socket.current.on('noteDetected', (data) => {\n      if (data.note) {\n        onNoteDetected(data);\n      }\n    });\n\n    socket.current.on('sessionEnded', (data) => {\n      onSessionEnd(data);\n    });\n\n    return () => {\n      if (socket.current) {\n        socket.current.disconnect();\n      }\n      if (animationFrame.current) {\n        cancelAnimationFrame(animationFrame.current);\n      }\n      stopRecording();\n    };\n  }, [songId, onNoteDetected, onSessionEnd]);\n\n  const startRecording = async () => {\n    try {\n      // Request microphone access\n      mediaStream.current = await navigator.mediaDevices.getUserMedia({ audio: true });\n      \n      // Set up audio context and analyser\n      audioContext.current = new (window.AudioContext || window.webkitAudioContext)();\n      analyser.current = audioContext.current.createAnalyser();\n      analyser.current.fftSize = 2048;\n      \n      const source = audioContext.current.createMediaStreamSource(mediaStream.current);\n      source.connect(analyser.current);\n      \n      // Start the session on the server\n      socket.current.emit('startPractice', songId);\n      \n      // Start processing audio data\n      processAudioData();\n      setIsRecording(true);\n    } catch (err) {\n      setError('Error accessing microphone: ' + err.message);\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaStream.current) {\n      mediaStream.current.getTracks().forEach(track => track.stop());\n      mediaStream.current = null;\n    }\n    if (audioContext.current) {\n      audioContext.current.close();\n      audioContext.current = null;\n    }\n    if (animationFrame.current) {\n      cancelAnimationFrame(animationFrame.current);\n    }\n    setIsRecording(false);\n    \n    // End the session on the server\n    if (socket.current) {\n      socket.current.emit('endPractice');\n    }\n  };\n\n  const processAudioData = () => {\n    if (!analyser.current) return;\n\n    const dataArray = new Float32Array(analyser.current.frequencyBinCount);\n    analyser.current.getFloatTimeDomainData(dataArray);\n\n    // Send audio data to server\n    socket.current.emit('audioData', Array.from(dataArray));\n\n    // Request next frame\n    animationFrame.current = requestAnimationFrame(processAudioData);\n  };\n\n  return (\n    <div className=\"audio-capture\">\n      <div className=\"controls\">\n        <button \n          onClick={isRecording ? stopRecording : startRecording}\n          className={`record-button ${isRecording ? 'recording' : ''}`}\n        >\n          {isRecording ? 'Stop Recording' : 'Start Recording'}\n        </button>\n      </div>\n      \n      {error && (\n        <div className=\"error-message\">\n          {error}\n        </div>\n      )}\n      \n      <style jsx>{`\n        .audio-capture {\n          padding: 20px;\n          text-align: center;\n        }\n        \n        .controls {\n          margin-bottom: 20px;\n        }\n        \n        .record-button {\n          padding: 10px 20px;\n          font-size: 16px;\n          border-radius: 25px;\n          border: none;\n          background-color: #4CAF50;\n          color: white;\n          cursor: pointer;\n          transition: all 0.3s ease;\n        }\n        \n        .record-button.recording {\n          background-color: #f44336;\n          animation: pulse 1.5s infinite;\n        }\n        \n        .error-message {\n          color: #f44336;\n          margin-top: 10px;\n        }\n        \n        @keyframes pulse {\n          0% {\n            transform: scale(1);\n          }\n          50% {\n            transform: scale(1.05);\n          }\n          100% {\n            transform: scale(1);\n          }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default AudioCapture; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}