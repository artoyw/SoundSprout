{"ast":null,"code":"var _jsxFileName = \"/home/juanjgarcia05/soundsprout/frontend/src/components/PracticeSession.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AudioCapture from './AudioCapture';\nimport NoteVisualizer from './NoteVisualizer';\nimport PerformanceScore from './PerformanceScore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PracticeSession = ({\n  song\n}) => {\n  _s();\n  const [currentNote, setCurrentNote] = useState(null);\n  const [expectedNote, setExpectedNote] = useState(null);\n  const [score, setScore] = useState(null);\n  const [isActive, setIsActive] = useState(false);\n  const handleNoteDetected = data => {\n    setCurrentNote(data);\n    // Find the expected note based on the current timestamp\n    const expectedNote = findExpectedNote(data.timestamp);\n    setExpectedNote(expectedNote);\n  };\n  const handleSessionEnd = data => {\n    setScore(data.details);\n    setIsActive(false);\n  };\n  const findExpectedNote = timestamp => {\n    if (!song.noteData) return null;\n\n    // Find the note that should be played at this timestamp\n    const note = song.noteData.find(note => timestamp >= note.timestamp && timestamp <= note.timestamp + note.duration);\n    return note ? note.note : null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"practice-session\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Practice: \", song.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"song-info\",\n      children: [song.artist, \" \\u2022 Tempo: \", song.tempo, \" BPM \\u2022 Time Signature: \", song.timeSignature]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AudioCapture, {\n      songId: song._id,\n      onNoteDetected: handleNoteDetected,\n      onSessionEnd: handleSessionEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), isActive && /*#__PURE__*/_jsxDEV(NoteVisualizer, {\n      currentNote: currentNote,\n      expectedNote: expectedNote,\n      tempo: song.tempo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), score && /*#__PURE__*/_jsxDEV(PerformanceScore, {\n      score: score,\n      notes: song.noteData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .practice-session {\n          max-width: 1200px;\n          margin: 0 auto;\n          padding: 20px;\n        }\n\n        h1 {\n          margin: 0 0 10px 0;\n          color: #333;\n        }\n\n        .song-info {\n          color: #666;\n          margin-bottom: 30px;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(PracticeSession, \"zV7YGOE4/rSxKsTniElSPNWpvBc=\");\n_c = PracticeSession;\nexport default PracticeSession;\nvar _c;\n$RefreshReg$(_c, \"PracticeSession\");","map":{"version":3,"names":["React","useState","AudioCapture","NoteVisualizer","PerformanceScore","jsxDEV","_jsxDEV","PracticeSession","song","_s","currentNote","setCurrentNote","expectedNote","setExpectedNote","score","setScore","isActive","setIsActive","handleNoteDetected","data","findExpectedNote","timestamp","handleSessionEnd","details","noteData","note","find","duration","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","artist","tempo","timeSignature","songId","_id","onNoteDetected","onSessionEnd","notes","jsx","_c","$RefreshReg$"],"sources":["/home/juanjgarcia05/soundsprout/frontend/src/components/PracticeSession.js"],"sourcesContent":["import React, { useState } from 'react';\nimport AudioCapture from './AudioCapture';\nimport NoteVisualizer from './NoteVisualizer';\nimport PerformanceScore from './PerformanceScore';\n\nconst PracticeSession = ({ song }) => {\n  const [currentNote, setCurrentNote] = useState(null);\n  const [expectedNote, setExpectedNote] = useState(null);\n  const [score, setScore] = useState(null);\n  const [isActive, setIsActive] = useState(false);\n\n  const handleNoteDetected = (data) => {\n    setCurrentNote(data);\n    // Find the expected note based on the current timestamp\n    const expectedNote = findExpectedNote(data.timestamp);\n    setExpectedNote(expectedNote);\n  };\n\n  const handleSessionEnd = (data) => {\n    setScore(data.details);\n    setIsActive(false);\n  };\n\n  const findExpectedNote = (timestamp) => {\n    if (!song.noteData) return null;\n    \n    // Find the note that should be played at this timestamp\n    const note = song.noteData.find(note => \n      timestamp >= note.timestamp && \n      timestamp <= note.timestamp + note.duration\n    );\n    \n    return note ? note.note : null;\n  };\n\n  return (\n    <div className=\"practice-session\">\n      <h1>Practice: {song.title}</h1>\n      <p className=\"song-info\">\n        {song.artist} • Tempo: {song.tempo} BPM • Time Signature: {song.timeSignature}\n      </p>\n\n      <AudioCapture\n        songId={song._id}\n        onNoteDetected={handleNoteDetected}\n        onSessionEnd={handleSessionEnd}\n      />\n\n      {isActive && (\n        <NoteVisualizer\n          currentNote={currentNote}\n          expectedNote={expectedNote}\n          tempo={song.tempo}\n        />\n      )}\n\n      {score && (\n        <PerformanceScore\n          score={score}\n          notes={song.noteData}\n        />\n      )}\n\n      <style jsx>{`\n        .practice-session {\n          max-width: 1200px;\n          margin: 0 auto;\n          padding: 20px;\n        }\n\n        h1 {\n          margin: 0 0 10px 0;\n          color: #333;\n        }\n\n        .song-info {\n          color: #666;\n          margin-bottom: 30px;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default PracticeSession; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}